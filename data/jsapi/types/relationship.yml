package: sys.data.types.RelationshipWrapper
page: app-development-type-relationship.html
description:
methods:
- name: id
  summary: Returns the ID of the referenced record
  description: |
    Returns the ID of the referenced record or `null` if the field is empty.
  parameters:
  returnType: string
  returnDescription: The ID of the referenced record.
  samples:
  - title: prints the ID of the referenced record in a relationship field
    code: |
      var record = sys.data.findOne('contacts', {email: 'djohnstonb0@behance.net'});
      log('company id: '+record.field('company').id());
- name: label
  summary: Returns the label of the referenced record
  description: |
    Returns the label of the referenced record or `null` if the field is empty.
  parameters:
  returnType: string
  returnDescription: The label of the referenced record.
  samples:
  - title: prints the label of the referenced record in a relationship field
    code: |
      var record = sys.data.findOne('contacts', {email: 'djohnstonb0@behance.net'});
      log('company label: '+record.field('company').label());
- name: fetch
  summary: Returns the referenced record
  description: |
    Returns the referenced record. If the record cannot be found it will return `null`.
  parameters:
  returnType: sys.data.Record
  returnDescription: The label of the referenced record.
  throws:
    - code: badRequest
      description: |
        If the `id` isn't available. For example if you just set the field using the label and haven't save it yet,
        then the `id` won't be available and you cannot fetch the referenced record using this method.
  samples:
  - title: fetches the referenced record
    code: |
      var contact = sys.data.findOne('contacts', {email: 'djohnstonb0@behance.net'});
      var company = contact.field('company').fetch();
      log('company: '+company.label());
- name: field
  summary: Returns the wrapper of a copied field
  description: |
    Returns the wrapper of a copied field.
  parameters:
  - name: path
    type: string
    required: yes
    description: The path of the copied field to get the wrapper.
  returnType: sys.data.Wrapper|sys.data.ManyWrapper
  returnDescription: The wrapper of the copied field.
  throws:
    - code: badRequest
      description: If `path` is invalid.
  samples:
  - title: gets the wrapper of the copied field and prints it's value
    code: |
      var contact = sys.data.findOne('contacts', {email: 'djohnstonb0@behance.net'});
      var companyTypeWrapper = contact.field('company').field('type');
      log('company type: '+companyTypeWrapper.val());
- name: equals
  summary: Determines if the given parameter is references the same as the current value of the field
  description: |
    Determines if the given parameter is references the same as the current value of the field.

    This method overrides the default behavior of <<<sys.data.Wrapper.equals()>>>.
  parameters:
  - name: value
    type: any
    required: yes
    description: |
      The value to compare against the field's value. There are different things you can pass here:

      - Record ID
      - Record label
      - Another relationship wrapper
      - A <<<sys.data.Record>>> object
      - An object with an `id` field
      - An object with a `label` field
  returnType: boolean
  returnDescription: |
    `true` if value is the same as field's value, `false` otherwise.
  throws:
  samples:
  - title: checks if the value is the same
    code: |
      var contact = sys.data.findOne('contacts', {email: 'djohnstonb0@behance.net'});
      var company = contact.field('company').fetch();
      log('equals - id: '+contact.field('company').equals(company.id()));
      log('equals - object with id: '+contact.field('company').equals({id: company.id()}));
      log('equals - label: '+contact.field('company').equals(company.label()));
      log('equals - object with label: '+contact.field('company').equals({label: company.label()}));
      log('equals - wrapper: '+contact.field('company').equals(contact.field('company')));
      log('equals - record: '+contact.field('company').equals(company));
