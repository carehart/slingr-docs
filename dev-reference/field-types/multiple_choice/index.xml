<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Multiple choice types on </title>
    <link>/dev-reference/field-types/multiple_choice/</link>
    <description>Recent content in Multiple choice types on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Nov 2020 13:59:39 +0100</lastBuildDate><atom:link href="/dev-reference/field-types/multiple_choice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Boolean type</title>
      <link>/dev-reference/field-types/multiple_choice/boolean/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/dev-reference/field-types/multiple_choice/boolean/</guid>
      <description>Overview # This data type can store a boolean value. Fields of this type cannot be null; their value is strictly either false or true.
Available features # Name Supported Many multiplicity yes Default values yes Unique flag no Required flag no Indexable flag yes Sensitive flag yes Calculated value yes Automatic initialization yes Calculated initial value yes Aggregation no Default type rules no Default display options yes Display Options # Representation # This determines how the field should appear.</description>
    </item>
    
    <item>
      <title>Choice type</title>
      <link>/dev-reference/field-types/multiple_choice/choice/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/dev-reference/field-types/multiple_choice/choice/</guid>
      <description>Overview # This feature enables you to define a predefined set of values that the field can contain. Within the user interface (UI), the user can select a value from the provided options using a dropdown, list, or switcher, depending on the chosen representation.
Each of the potential values comprises a label and a name, with only the name being stored in the database.
Available features # Name Supported Many multiplicity yes Default values yes Unique flag no Required flag yes Indexable flag yes Sensitive flag yes Calculated value yes Automatic initialization no Calculated initial value no Aggregation no Default type rules yes Default display options yes Type rules # Values # These represent the potential values that can be assigned to the field.</description>
    </item>
    
    <item>
      <title>Dynamic choice type</title>
      <link>/dev-reference/field-types/multiple_choice/dynamic-choice/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/dev-reference/field-types/multiple_choice/dynamic-choice/</guid>
      <description>Overview # This feature enables the specification of a set of potential dynamic values that the field can accommodate. Within the user interface (UI), users can select a value from these options using a dropdown, list, box, or switcher, depending on the chosen representation. The key distinction from standard choices lies in the inability to configure the potential values during the app builder&amp;rsquo;s field configuration process. Instead, the potential values can be defined using the JavaScript API, typically in events like &amp;quot;before show&amp;quot; or &amp;quot;on record change.</description>
    </item>
    
  </channel>
</rss>
