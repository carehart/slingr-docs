<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Official UI Plugins on </title>
    <link>/extending/official-ui-plugins/</link>
    <description>Recent content in Official UI Plugins on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Nov 2020 13:59:39 +0100</lastBuildDate><atom:link href="/extending/official-ui-plugins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>/extending/official-ui-plugins/overview/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/extending/official-ui-plugins/overview/</guid>
      <description>Here is the list of our officially-supported plugins:
Metamask Plaid Scandit Slaask Stripe </description>
    </item>
    
    <item>
      <title>Metamask</title>
      <link>/extending/official-ui-plugins/metamask/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/extending/official-ui-plugins/metamask/</guid>
      <description>This plugin allows users to sign transactions using the MetaMask browser extension.
Quick start # sys.ui.sendMessage({ scope: &#39;plugin:metamask&#39;, name: &#39;sendTransaction&#39;, data: {gas: ..., data: ..., ...}, // this is the tx data callbacks: { approved: function(msg, res) { sys.logs.debug(&amp;quot;tx hash: &amp;quot;+res.txHash); sys.logs.debug(&amp;quot;original msg: &amp;quot;+JSON.stringify(msg)); }, declined: function(msg, res) { sys.logs.debug(&amp;quot;declined: &amp;quot;+res.error); sys.logs.debug(&amp;quot;original msg: &amp;quot;+JSON.stringify(msg)); }, error: function(msg, res) { sys.logs.debug(&amp;quot;error code: &amp;quot;+res.errorCode); sys.logs.debug(&amp;quot;error: &amp;quot;+res.error); sys.logs.debug(&amp;quot;original msg: &amp;quot;+JSON.stringify(msg)); } } }); This script sends a transaction to MetaMask (in the data field) that needs to be confirmed by the user.</description>
    </item>
    
    <item>
      <title>Plaid Link</title>
      <link>/extending/official-ui-plugins/plaid/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/extending/official-ui-plugins/plaid/</guid>
      <description>Overview # Plaid Link is a drop-in module that provides a secure, elegant authentication flow for each institution that Plaid supports. Link makes it secure and easy for users to connect their bank accounts to Plaid.
Configuration # The following settings needs to be set:
Property Information Property Client name Displayed once a user has successfully linked their Item clientName. Product A list of Plaid product(s) you wish to use product Public key The public_key associated with your account key Environment The Plaid API environment on which to create user accounts.</description>
    </item>
    
    <item>
      <title>Scandit</title>
      <link>/extending/official-ui-plugins/scandit/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/extending/official-ui-plugins/scandit/</guid>
      <description>Overview # Scandit is mobile computer vision software enables barcode scanning.
Configuration # The following settings needs to be set:
Check SDK documentation for more information.
License key # Before starting with adding a capture mode, make sure that you have a valid Scandit Data Capture SDK license key and that you added the necessary dependencies. If you have not done that yet, check out this guide. The web license is required.</description>
    </item>
    
    <item>
      <title>Slaask</title>
      <link>/extending/official-ui-plugins/slaask/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/extending/official-ui-plugins/slaask/</guid>
      <description>Overview # This plugins allows to add the Slaask bot in your app.
Quick start # You just need to configure the plugin and the Slaask bot will show up in your app.
Configuration # First you will need to have a Slaask account. Then you can add the plugin and configure it.
Token # This token is the one in your Slaask account.
Inbound events # This plugin does not have inbound event.</description>
    </item>
    
    <item>
      <title>Stripe</title>
      <link>/extending/official-ui-plugins/stripe/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>/extending/official-ui-plugins/stripe/</guid>
      <description>Overview # The primary integration path through Stripe.js is with Elements, which enables you to collect sensitive payment information using UI components.
Configuration # This plugins allows to add the Stripe elements in your app.
Inbound events # Collect payment information # Collect card information on the client with Stripe.
var setupIntent = app.endpoints.stripe.coreResources.setupIntents.post(); var publicKey = app.endpoints.stripe._configuration.publishableKey; sys.ui.sendMessage({ scope: &#39;plugin:stripe&#39;, name: &#39;collectPaymentInformation&#39;, data: { publicKey: publicKey, title: &#39;Card Information&#39;, dataSecret: setupIntent, elementType: &#39;card&#39;, elementOptions: null }, callbacks: { onSuccess: function(originalMessage, callbackData) { sys.</description>
    </item>
    
  </channel>
</rss>
