<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Special types on </title>
    <link>https://pmslingr.github.io/slingrDoc/dev-reference/field-types/special/</link>
    <description>Recent content in Special types on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Nov 2020 13:59:39 +0100</lastBuildDate><atom:link href="https://pmslingr.github.io/slingrDoc/dev-reference/field-types/special/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nested Fields</title>
      <link>https://pmslingr.github.io/slingrDoc/dev-reference/field-types/special/special/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>https://pmslingr.github.io/slingrDoc/dev-reference/field-types/special/special/</guid>
      <description>Overview # This field type allows for the inclusion of other fields within it, facilitating nested structures. This capability permits the creation of multiple levels of nesting, thereby supporting complex data structures within entities.
For instance, you can create a structure like the following:
name email address addressLine zipCode state In this scenario, &amp;ldquo;address&amp;rdquo; is a field of type nested fields and contains the fields &amp;ldquo;addressLine,&amp;rdquo; &amp;ldquo;zipCode,&amp;rdquo; and &amp;ldquo;state.&amp;rdquo;
Furthermore, these nested structures can also be multi-valued, as demonstrated in the following example:</description>
    </item>
    
    <item>
      <title>Relationship type</title>
      <link>https://pmslingr.github.io/slingrDoc/dev-reference/field-types/special/relationship/</link>
      <pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate>
      
      <guid>https://pmslingr.github.io/slingrDoc/dev-reference/field-types/special/relationship/</guid>
      <description>Overview # The relationship type enables the storage of references to other records within the app. It encompasses various features to manage which records can be referenced, along with how to display these references in the user interface.
Available features # Name Supported Many multiplicity yes Default values yes Unique flag yes Required flag yes Indexable flag yes Sensitive flag yes Calculated value yes Automatic initialization no Calculated initial value no Aggregation no Default type rules no Default display options no Type rules # Related Entity # This indicates the entity of the records that can be referenced by this field.</description>
    </item>
    
  </channel>
</rss>
