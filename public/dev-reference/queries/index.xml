<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Queries on</title><link>/dev-reference/queries/</link><description>Recent content in Queries on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 16 Nov 2020 13:59:39 +0100</lastBuildDate><atom:link href="/dev-reference/queries/index.xml" rel="self" type="application/rss+xml"/><item><title>Query language</title><link>/dev-reference/queries/query-language/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>/dev-reference/queries/query-language/</guid><description>Overview # The query language enables you to search for records within an entity using complex criteria. This language is used by both the REST API and the Javascript API. However, please note that the method of specifying queries differs between the two.
For example, a simple query to retrieve 10 active companies using the REST API looks like this:
GET https://app.{{ site.slingr_domain }}/prod/runtime/api/data/companies?state=active&amp;amp;_size=10 In contrast, with the Javascript API, it would look something like this:</description></item><item><title>Aggregated queries</title><link>/dev-reference/queries/aggregate-queries/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>/dev-reference/queries/aggregate-queries/</guid><description>Overview # Aggregated queries enable you to perform aggregation operations on records in entities, such as counting, summing, or averaging.
This feature is implemented using the MongoDB&amp;rsquo;s aggregation framework, so you&amp;rsquo;ll notice many similarities. This guide provides all the information you need to write aggregate queries, and you shouldn&amp;rsquo;t need to refer to MongoDB&amp;rsquo;s documentation.
In essence, there is a pipeline where the input consists of records in the entity, and you apply various operations to filter, sort, and aggregate the data.</description></item><item><title>UI queries</title><link>/dev-reference/queries/ui-queries/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>/dev-reference/queries/ui-queries/</guid><description>Overview # UI Queries, or simplified queries for the UI, can be written in various parts of the UI generated by the app runtime. For instance, filters that you create in a grid view utilize these types of queries.
The primary objective is to enable app users to compose slightly more complex queries using plain text. For instance, you can create the following queries for an integer field:
Value is 10: 10 Value is 5 or 9: 5,9 Value ranges from 0 to 10 (inclusive): 0.</description></item></channel></rss>